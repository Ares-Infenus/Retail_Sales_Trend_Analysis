@startuml
skinparam style strictuml
skinparam linetype ortho

start

:Descargar todos los datos del concurso;
:Crear estructura de carpetas del proyecto;
:Inicializar repositorio en GitHub;

--> [push a main] CI/CD:
fork
  :Ejecutar linters (flake8, black);
  :Ejecutar tests (pytest);
  :Generar documentación automática (Sphinx);
  :Construir imagen Docker (TimescaleDB + PostgreSQL);
end fork

:EDA inicial (01_EDA.ipynb) con datos sin limpiar;
:Limpieza de datos (02_Cleaning.ipynb);
:Guardar datos limpios en data/processed/;

:Construir y ejecutar contenedor Docker de BD;
:Ejecutar init_db.sql durante el build;
:Carga de datos con script Python (ingest.py) usando COPY;

:EDA avanzado (03_EDA_Profundo.ipynb) consultando TimescaleDB;
:Trend_Analysis.ipynb;
note right
Detectar tendencias, patrones estacionales, ciclos y anomalías
end note

:Modelado predictivo (ARIMA, XGBoost, Regresión Logística);
:Optimización offline de hiperparámetros con Optuna;
:Evaluar métricas y registrar modelos con MLflow;

:Generar informe ejecutivo automáticamente;
:Crear dashboard Tableau con extractos programados;

stop
@enduml
