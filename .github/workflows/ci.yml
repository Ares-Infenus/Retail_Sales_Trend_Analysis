name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  base-setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f environment.txt ]; then
            pip install -r environment.txt
          else
            echo "‚ùå No se encontr√≥ environment.txt"
            exit 1
          fi

      - name: Run install.ps1
        shell: pwsh
        run: |
          if (Test-Path -Path "./scripts/install.ps1") {
            Write-Host "üîß Ejecutando scripts/install.ps1 para crear Docker Compose..."
            ./scripts/install.ps1
          } else {
            Write-Error "‚ùå No se encontr√≥ scripts/install.ps1"
            exit 1
          }

      - name: Create containers before starting them
        shell: pwsh
        run: |
          if (Test-Path -Path "./infra/docker-compose.yml") {
            Write-Host "üì¶ Creando contenedores desde infra/docker-compose.yml..."
            docker compose -f ./infra/docker-compose.yml up -d --no-start
          } else {
            Write-Error "‚ùå No se encontr√≥ infra/docker-compose.yml"
            exit 1
          }

      - name: Start and initialize containers
        shell: pwsh
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.12.7/x64
          PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.7/x64/lib/pkgconfig
          Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.7/x64
          Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.7/x64
          Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.7/x64
          LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.7/x64/lib
        run: |
          if (Test-Path -Path "./scripts/start.ps1") {
            Write-Host "üöÄ Iniciando contenedores y creando arquitectura de base de datos..."
            ./scripts/start.ps1
          } else {
            Write-Error "‚ùå No se encontr√≥ scripts/start.ps1"
            exit 1
          }

  schema-test:
    needs: base-setup
    runs-on: ubuntu-latest

    services:
      postgres:
        image: timescale/timescaledb:latest-pg14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7'

      - name: Install pytest & psycopg2
        run: |
          python -m pip install --upgrade pip
          pip install pytest psycopg2-binary

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "‚è≥ Esperando a que Postgres est√© listo..."
            sleep 2
          done

      - name: Initialize database schema
        shell: bash
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -U postgres -d postgres \
            -f ./infra/migrations/001_initial_schema.sql

      - name: Run schema tests
        env:
          DB_DSN: postgresql://postgres:postgres@localhost:5432/postgres
        run: |
          pytest -q --disable-warnings --maxfail=1 tests/test_schema.py
