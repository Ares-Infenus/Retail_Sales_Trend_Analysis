name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  base-setup:
    runs-on: ubuntu-latest
    steps:
      # … tus steps actuales …

  schema-test:
    needs: base-setup
    runs-on: ubuntu-latest
    services:
      postgres:
        image: timescale/timescaledb:latest-pg14
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7'

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install pytest psycopg2-binary

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Run database init scripts
        # Aquí ejecutas ./scripts/install.ps1 y start.ps1 como en base-setup,
        # o directamente aplicas el SQL de creación de schema.
        run: |
          psql postgresql://postgres:postgres@localhost:5432/postgres \
            -f infra/init_schema.sql

      - name: Run schema tests
        env:
          DB_DSN: postgresql://postgres:postgres@localhost:5432/postgres
        run: |
          pytest -q --disable-warnings --maxfail=1 tests/test_schema.py
